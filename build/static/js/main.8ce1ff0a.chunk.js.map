{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","noteServices","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","Notification","message","App","props","addNote","event","preventDefault","noteObject","state","newNote","date","Date","Math","random","setState","notes","concat","handleNoteChange","console","log","target","value","toggleVisible","showAll","toggleImportanceOf","find","n","changedNote","filter","catch","error","setTimeout","notesToShow","this","map","onSubmit","onChange","type","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ce1ff0a.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? \"make not important\" : \"make important\"\n    return (\n      <li className='note'>{note.content} <button onClick={toggleImportance}>{label}</button></li>\n    )\n}\n\nexport default Note","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\n// const getAll = () => {\n//   return axios.get(baseUrl)\n// }\n\n// const create = (newObject) => {\n//   return axios.post(baseUrl, newObject)\n// }\n\n// const update = (id, newObject) => {\n//   return axios.put(`${baseUrl}/${id}`, newObject)\n// }\n  \nconst create = (newObject) => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n  \nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst noteServices =  { getAll, create, update }\n\nexport default noteServices;","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n    return (\n      <div className='error'>\n        {message}\n      </div>\n    )\n  }\n\nexport default Notification;","import React from 'react';\nimport Note from './components/Note';\nimport noteServices from './services/notes';\nimport Notification from './components/Notification';\n\nclass App extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        notes: [],\n        newNote: '',\n        showAll: true,\n        error: null\n      }\n      console.log(\"constructor\");\n    }\n\n    componentDidMount() {\n\n        noteServices\n            .getAll()\n            .then(response => {\n            this.setState({ notes: response })\n            })\n\n        // noteServices\n        //     .getAll()\n        //     .then(response => {\n        //         this.setState({notes: response.data})\n        //     })\n    \n        \n            // console.log('did mount')\n            // axios\n            //   .get('http://localhost:3001/notes')\n            //   .then(response => {\n            //     console.log('promise fulfilled')\n            //     this.setState({ notes: response.data })\n            //   })\n            // }\n    \n    }\n\n\n    addNote = (event) => {\n        event.preventDefault()\n        const noteObject = {\n            content: this.state.newNote,\n            date: new Date(),\n            important: Math.random() > 0/5,\n            // id: this.state.notes.length + 1 ====== We leave it to the server.\n        }\n\n        noteServices\n            .create(noteObject)\n            .then(newNote => {\n                this.setState({\n                    notes: this.state.notes.concat(newNote),\n                    newNote: ''\n                })\n            })\n\n        // noteServices\n        //     .create(noteObject)\n        //     .then(newNote => {\n        //         this.setState({\n        //             notes: this.state.notes.concat(newNote),\n        //             newNote: '...'\n        //         })\n        //     })\n\n        // axios.post('http://localhost:3001/notes', noteObject)\n        // .then(response => {\n        //     this.setState({\n        //         notes: this.state.notes.concat(response.data),\n        //         newNote: ''\n        //     })\n        // })\n    }\n      \n    handleNoteChange = (event) => {\n        console.log(event.target.value)\n        this.setState({ newNote: event.target.value })\n    }\n\n    toggleVisible = () => {\n        this.setState({showAll: !this.state.showAll})\n    }\n\n    toggleImportanceOf = (id) => {\n        return () => {\n            // console.log(`importance of  ${id} need to be toggled`)\n            const note = this.state.notes.find(n => n.id === id)\n            const changedNote = { ...note, important: !note.important }\n\n            noteServices\n            .update(id, changedNote)\n            .then(changedNote => {\n              const notes = this.state.notes.filter(n => n.id !== id)\n              this.setState({\n                notes: notes.concat(changedNote)\n              })\n            })\n            .catch(error => {\n                this.setState({\n                  error: `muistiinpano '${note.content}' on jo valitettavasti poistettu palvelimelta`,\n                  notes: this.state.notes.filter(n => n.id !== id)\n                })\n                setTimeout(() => {\n                  this.setState({error: null})\n                }, 5000)\n            })\n\n            // noteServices\n            //     .update(id, changedNote)\n            //     .then(response => {\n            //         this.setState({\n            //             notes: this.state.notes.map(note => note.id !== id ? note : response.data)\n            //         })\n            //     })\n            //     .catch(err => {\n            //         alert(`muistiinpano '${note.content}' on jo valitettavasti poistettu palvelimelta`)\n            //         this.setState({ notes: this.state.notes.filter(n => n.id !== id) })\n            //       })\n            // axios\n            //     .put(url, changedNote)\n            //     .then(response => {\n            //         this.setState({\n            //             notes: this.state.notes.map(note => note.id !== id ? note : response.data)\n            //         })\n            //     })\n        }\n    }\n  \n    render() {\n        console.log(\"render\")\n        const notesToShow =\n            this.state.showAll ?\n                this.state.notes :\n                this.state.notes.filter(note => note.important === true)\n                // note.important is always boolean.\n                // we could write simply:... note => note.important)\n\n        const label = this.state.showAll ? 'only important' : 'all'\n\n        return (\n            <div>\n                <h1>Muistiinpanot</h1>\n\n                <Notification message={this.state.error}/>\n\n                <div>\n                    <button onClick={this.toggleVisible}>\n                        show {label}\n                    </button>\n                </div>\n\n                <ul>\n                    {notesToShow.map(note =>\n                        <Note\n                            key={note.id}\n                            note={note}\n                            toggleImportance={this.toggleImportanceOf(note.id)}\n                        />)\n                    }\n                </ul>\n                <form onSubmit={this.addNote}>\n                    <input\n                        value={this.state.newNote}\n                        onChange={this.handleNoteChange}\n                    />\n                    <button type=\"submit\">Save</button>\n                </form>\n            </div>\n        )\n    }\n  }\n\nexport default App\n\n\n\n//////// This version allows adding new notes\n\n\n// import React from 'react'\n// import Note from './components/Note'\n\n// class App extends React.Component {\n//     constructor(props) {\n//       super(props)\n//       this.state = {\n//         notes: props.notes,\n//         newNote: 'new note is being created...'\n//       }\n//     }\n\n//     addNote = (event) => {\n//         event.preventDefault()\n//         const noteObject = {\n//             content: this.state.newNote,\n//             date: new Date().toISOString(),\n//             important: Math.random() > 0/5,\n//             id: this.state.notes.length + 1\n//         }\n\n//         const notes = this.state.notes.concat(noteObject)\n\n//         this.setState({\n//             //\n//             notes: notes,\n//             // because of ES6, it could be written just: notes,\n//             //\n//             newNote: ''\n//         })\n//     }\n      \n//     handleNoteChange = (event) => {\n//         console.log(event.target.value)\n//         this.setState({ newNote: event.target.value })\n//     }\n  \n//     render() {\n//       return (\n//         <div>\n//           <h1>Muistiinpanot</h1>\n//           <ul>\n//             {this.state.notes.map(note => <Note key={note.id} note={note} />)}\n//           </ul>\n//           <form onSubmit={this.addNote}>\n//               <input\n//                 value={this.state.newNote}\n//                 onChange={this.handleNoteChange}\n//               />\n//               <button type=\"submit\">tallenna</button>\n//           </form>\n//         </div>\n//       )\n//     }\n//   }\n\n// export default App\n\n\n/////////////// App below just creates the list of notes\n\n\n// import React from 'react'\n// import Note from './components/Note'\n\n// const App = ({ notes }) => {\n//     // Key is connected to 1 item, which we called \"note\". That's why,\n//     // key != notes.id BUT key = note.id\n//     // const lines = () => notes.map(note => <li key={note.id}>{note.content}</li>)\n  \n//     return (\n//       <div>\n//         <h1>Muistiinpanot</h1>\n//         <ul>\n//           {notes.map(note=><Note key={note.id} note={note}/>)}\n//         </ul>\n//       </div>\n//     )\n//   }\n\n//   export default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}